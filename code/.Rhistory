format_latex(h_incent_6_eur2_eur_5, dv_label, trt_label = "EUR 5 vs. EUR 2", path = "../figures/h_incent_6_eur2_eur_5.tex", add.cace = TRUE)
### Exploratory analysis ----------
### H4: Subjects in any of the incentivization groups will show higher levels of applied knowledge about the app than subjects assigned to the control group. (here: alternative knowledge measure - recognition of app icon, app screenshot)
# define vars
dv <- "app_know2_index.3"
dv_pre <- "app_know_icon_cor.2"
D <- "app_hyb_installed_at_w3" # hybrid Uptake measure, W3
dv_label <- "Knowledge (icon, screenshot)"
# run models
h_incent_know2_pooled <- run_models(trt = "treat_incent_any.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2)), run.cace = TRUE)
h_incent_know2_eur1 <- run_models(trt = "treat_incent_any.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2), !(treat_incent.2 %in% c("EUR 2", "EUR 5"))), run.cace = TRUE)
h_incent_know2_eur2 <- run_models(trt = "treat_incent_any.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2), !(treat_incent.2 %in% c("EUR 1", "EUR 5"))), run.cace = TRUE)
h_incent_know2_eur5 <- run_models(trt = "treat_incent_any.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2), !(treat_incent.2 %in% c("EUR 1", "EUR 2"))), run.cace = TRUE)
h_incent_know2_eur1_eur_2 <- run_models(trt = "treat_incent_eur2.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2), !(treat_incent.2 %in% c("EUR 5", "Control"))), run.cace = TRUE)
h_incent_know2_eur1_eur_5 <- run_models(trt = "treat_incent_eur5.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2), !(treat_incent.2 %in% c("EUR 2", "Control"))), run.cace = TRUE)
h_incent_know2_eur2_eur_5 <- run_models(trt = "treat_incent_eur5.2", dv = dv, dv_pre = dv_pre, D = D, covars = covars2, data = filter(ger_df_wide, !is.na(treat_incent_any.2), !(treat_incent.2 %in% c("EUR 1", "Control"))), run.cace = TRUE)
# export results tables
format_latex(h_incent_know2_pooled, dv_label, trt_label = "Pooled vs. control", path = "../figures/h_incent_know2_pooled.tex", add.cace = TRUE)
format_latex(h_incent_know2_eur1, dv_label, trt_label = "EUR 1 vs. control", path = "../figures/h_incent_know2_eur1.tex", add.cace = TRUE)
format_latex(h_incent_know2_eur2, dv_label, trt_label = "EUR 2 vs. control", path = "../figures/h_incent_know2_eur2.tex", add.cace = TRUE)
format_latex(h_incent_know2_eur5, dv_label, trt_label = "EUR 5 vs. control", path = "../figures/h_incent_know2_eur5.tex", add.cace = TRUE)
format_latex(h_incent_know2_eur1_eur_2, dv_label, trt_label = "EUR 2 vs. EUR 1", path = "../figures/h_incent_know2_eur1_eur_2.tex", add.cace = TRUE)
format_latex(h_incent_know2_eur1_eur_5, dv_label, trt_label = "EUR 5 vs. EUR 1", path = "../figures/h_incent_know2_eur1_eur_5.tex", add.cace = TRUE)
format_latex(h_incent_know2_eur2_eur_5, dv_label, trt_label = "EUR 5 vs. EUR 2", path = "../figures/h_incent_know2_eur2_eur_5.tex", add.cace = TRUE)
### Test of heterogeneity hypotheses ----------------------
dv_vec <- c("app_track_installed_at_w3_incent_std", "app_hyb_installed_at_w3_incent_std", "app_rep_installed_at_w3_incent_std", "app_know_index_std.3", "app_know2_index.3", "att_scale_score_incent_std.3", "app_sharing_clicks_std.2")
dv_pre_vec <- c("app_track_installed_at_w2", "app_hyb_installed_at_w2", "app_rep_installed_at_w2", "app_know_index.2", "app_know_icon_cor.2", "att_scale_score.2", "app_sharing_clicks_std.1")
dv_labels <- c("Uptake (tracked)", "Uptake (hybrid)", "Uptake (reported)", "Knowledge", "Knowledge (icon, screenshot)", "Positive attitudes", "Message sharing (tracked)")
### H-Age-Het (not pre-registered): What's the moderating effect of age?
het_age_list <- list()
het_age_effect <- character()
for (i in seq_along(dv_vec)){
dv <- dv_vec[i]
dv_pre <- dv_pre_vec[i]
if(is.na(dv_pre)){ dv_pre <- NULL}
het_age_list[[i]] <- try(heterogeneous_itt(dv = dv, dv_pre = dv_pre, covars = covars2,
moderator = "age.1", trt = "treat_incent_any.2",
data = filter(ger_df_wide, !is.na(treat_incent_any.2))))
het_age_effect[i] <- try(het_age_list[[i]][[2]])
}
### H-NPI-Het (not pre-registered): What's the moderating effect of general NPI compliance?
het_npi_list <- list()
het_npi_effect <- character()
for (i in seq_along(dv_vec)){
dv <- dv_vec[i]
dv_pre <- dv_pre_vec[i]
if(is.na(dv_pre)){ dv_pre <- NULL}
het_npi_list[[i]] <- try(heterogeneous_itt(dv = dv, dv_pre = dv_pre, covars = covars2,
moderator = "aha_compliance_cat2.1", trt = "treat_incent_any.2",
data = filter(ger_df_wide, !is.na(treat_incent_any.2))))
het_npi_effect[i] <- try(het_npi_list[[i]][[2]])
}
### H-GovTrust-Het (not pre-registered): What's the moderating effect of trust in government?
het_govtrust_list <- list()
het_govtrust_effect <- character()
for (i in seq_along(dv_vec)){
dv <- dv_vec[i]
dv_pre <- dv_pre_vec[i]
if(is.na(dv_pre)){ dv_pre <- NULL}
het_govtrust_list[[i]] <- try(heterogeneous_itt(dv = dv, dv_pre = dv_pre, covars = covars2,
moderator = "trust_gov_cat2.1", trt = "treat_incent_any.2",
data = filter(ger_df_wide, !is.na(treat_incent_any.2))))
het_govtrust_effect[i] <- try(het_govtrust_list[[i]][[2]])
}
### H-ThreatPerception-Het (not pre-registered): What's the moderating effect of COVID threat perception?
het_threatfamf_list <- list()
het_threatfamf_effect <- character()
for (i in seq_along(dv_vec)){
dv <- dv_vec[i]
dv_pre <- dv_pre_vec[i]
if(is.na(dv_pre)){ dv_pre <- NULL}
het_threatfamf_list[[i]] <- try(heterogeneous_itt(dv = dv, dv_pre = dv_pre, covars = covars2,
moderator = "covidconcerned_famf_cat2.1", trt = "treat_incent_any.2",
data = filter(ger_df_wide, !is.na(treat_incent_any.2))))
het_threatfamf_effect[i] <- try(het_threatfamf_list[[i]][[2]])
}
### What's the moderating effect of message treatment status?
het_messagetreat_list <- list()
het_messagetreat_effect <- character()
for (i in seq_along(dv_vec)){
dv <- dv_vec[i]
dv_pre <- dv_pre_vec[i]
if(is.na(dv_pre)){ dv_pre <- NULL}
het_messagetreat_list[[i]] <- try(heterogeneous_itt(dv = dv, dv_pre = dv_pre, covars = covars2,
moderator = "treat_any.1", trt = "treat_incent_any.2",
data = filter(ger_df_wide, !is.na(treat_incent_any.2))))
het_messagetreat_effect[i] <- try(het_messagetreat_list[[i]][[2]])
}
### What's the moderating effect of self-interest?
het_selfint_list <- list()
het_selfint_effect <- character()
for (i in seq_along(dv_vec)){
dv <- dv_vec[i]
dv_pre <- dv_pre_vec[i]
if(is.na(dv_pre)){ dv_pre <- NULL}
het_selfint_list[[i]] <- try(heterogeneous_itt(dv = dv, dv_pre = dv_pre, covars = covars2,
moderator = "selfint_score.1", trt = "treat_incent_any.2",
data = filter(ger_df_wide, !is.na(treat_incent_any.2))))
het_selfint_effect[i] <- try(het_selfint_list[[i]][[2]])
}
# print to latex
het_effects_df <-
data.frame(Outcome = dv_labels,
Age = het_age_effect,
NPI = het_npi_effect,
GovTrust = het_govtrust_effect,
MessageTreat = het_messagetreat_effect,
stringsAsFactors = FALSE
)
print(xtable(het_effects_df), include.rownames = FALSE)
# define dv labels
outcome_labels_df <- data.frame(
outcome = c("app_track_installed_at_w3_incent_std", "app_hyb_installed_at_w3_incent_std", "app_rep_installed_at_w3_incent_std", "app_know_index_std.3", "att_scale_score_incent_std.3", "app_sharing_clicks_std.2"),
outcome_label = c("Uptake (tracked)", "Uptake (hybrid)", "Uptake (reported)",  "Knowledge", "Positive attitudes", "Message sharing (tracked)"))
### Coefplot for main results of incentivization experiment -------------------
# tidy DIM results
dim_incent_tc_pooled <- list(h_incent_2a_pooled$dim, h_incent_2ah_pooled$dim, h_incent_3a_pooled$dim, h_incent_4_pooled$dim, h_incent_5_pooled$dim, h_incent_6_pooled$dim) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2") %>% mutate(trt = "treat_incent_any.2", Treatment = "Pooled") %>% merge(outcome_labels_df, by = "outcome")
dim_incent_tc_eur1 <- list(h_incent_2b_eur1$dim, h_incent_2bh_eur1$dim, h_incent_3b_eur1$dim, h_incent_4_eur1$dim, h_incent_5_eur1$dim, h_incent_6_eur1$dim) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 1") %>% merge(outcome_labels_df, by = "outcome")
dim_incent_tc_eur2 <- list(h_incent_2b_eur2$dim, h_incent_2bh_eur2$dim, h_incent_3b_eur2$dim, h_incent_4_eur2$dim, h_incent_5_eur2$dim) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 2") %>% merge(outcome_labels_df, by = "outcome") # h_incent_6_eur2 could not be estimated
dim_incent_tc_eur5 <- list(h_incent_2b_eur5$dim, h_incent_2bh_eur5$dim, h_incent_3b_eur5$dim, h_incent_4_eur5$dim, h_incent_5_eur5$dim, h_incent_6_eur5$dim) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 5") %>% merge(outcome_labels_df, by = "outcome")
# tidy ITT results
itt_incent_tc_pooled <- list(h_incent_2a_pooled$itt[[1]], h_incent_2ah_pooled$itt[[1]], h_incent_3a_pooled$itt[[1]], h_incent_4_pooled$itt[[1]], h_incent_5_pooled$itt[[1]], h_incent_6_pooled$itt[[1]]) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "Pooled") %>% merge(outcome_labels_df, by = "outcome")
itt_incent_tc_eur1 <- list(h_incent_2b_eur1$itt[[1]], h_incent_2bh_eur1$itt[[1]], h_incent_3b_eur1$itt[[1]], h_incent_4_eur1$itt[[1]], h_incent_5_eur1$itt[[1]], h_incent_6_eur1$itt[[1]]) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 1") %>% merge(outcome_labels_df, by = "outcome")
itt_incent_tc_eur2 <- list(h_incent_2b_eur2$itt[[1]], h_incent_2bh_eur2$itt[[1]], h_incent_3b_eur2$itt[[1]], h_incent_4_eur2$itt[[1]], h_incent_5_eur2$itt[[1]]) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 2") %>% merge(outcome_labels_df, by = "outcome") # h_incent_6_eur2 could not be estimated
itt_incent_tc_eur5 <- list(h_incent_2b_eur5$itt[[1]], h_incent_2bh_eur5$itt[[1]], h_incent_3b_eur5$itt[[1]], h_incent_4_eur5$itt[[1]], h_incent_5_eur5$itt[[1]], h_incent_6_eur5$itt[[1]]) %>% map(tidy) %>% bind_rows() %>% filter(term == "treat_incent_any.2TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 5") %>% merge(outcome_labels_df, by = "outcome")
itt_tc_all <- bind_rows(itt_incent_tc_pooled, itt_incent_tc_eur1, itt_incent_tc_eur2, itt_incent_tc_eur5)
itt_tc_all$Treatment <- factor(itt_tc_all$Treatment, levels = c("Pooled", "EUR 1", "EUR 2", "EUR 5"))
# tidy CACE results
cace_incent_tc_pooled <- list(h_incent_4_pooled$cace, h_incent_5_pooled$cace, h_incent_6_pooled$cace) %>% map(tidy) %>% bind_rows() %>% filter(term == "app_hyb_installed_at_w3TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "Pooled") %>% merge(outcome_labels_df, by = "outcome")
cace_incent_tc_eur1 <- list(h_incent_2b_eur1$cace, h_incent_2bh_eur1$cace, h_incent_3b_eur1$cace, h_incent_4_eur1$cace, h_incent_5_eur1$cace, h_incent_6_eur1$cace) %>% map(tidy) %>% bind_rows() %>% filter(term == "app_hyb_installed_at_w3TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 1") %>% merge(outcome_labels_df, by = "outcome")
cace_incent_tc_eur2 <- list(h_incent_2b_eur2$cace, h_incent_2bh_eur2$cace, h_incent_3b_eur2$cace, h_incent_4_eur2$cace, h_incent_5_eur2$cace) %>% map(tidy) %>% bind_rows() %>% filter(term == "app_hyb_installed_at_w3TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 2") %>% merge(outcome_labels_df, by = "outcome") # h_incent_6_eur2 could not be estimated
cace_incent_tc_eur5 <- list(h_incent_2b_eur5$cace, h_incent_2bh_eur5$cace, h_incent_3b_eur5$cace, h_incent_4_eur5$cace, h_incent_5_eur5$cace, h_incent_6_eur5$cace) %>% map(tidy) %>% bind_rows() %>% filter(term == "app_hyb_installed_at_w3TRUE") %>% mutate(trt = "treat_incent_any.2", Treatment = "EUR 5") %>% merge(outcome_labels_df, by = "outcome")
cace_tc_all <- bind_rows(cace_incent_tc_pooled, cace_incent_tc_eur1, cace_incent_tc_eur2, cace_incent_tc_eur5)
cace_tc_all$Treatment <- factor(cace_tc_all$Treatment, levels = c("Pooled", "EUR 1", "EUR 2", "EUR 5"))
# get order of variables in plot right
itt_tc_all$outcome_label <- factor(
itt_tc_all$outcome_label,
levels =
rev(outcome_labels_df$outcome_label)
)
cace_tc_all$outcome_label <- factor(
cace_tc_all$outcome_label,
levels =
rev(outcome_labels_df$outcome_label)
)
pdf(file="../figures/incentivization-effects-itt.pdf", height = 5, width = 7)
ggplot(data = itt_tc_all, aes(y = estimate, x = outcome_label)) +
geom_hline(yintercept = 0, colour = "black", lty = 2) +
geom_pointrange(aes(y = estimate,
ymin = conf.low,
ymax = conf.high,
color = Treatment),
position = position_dodge(width=-.5)) +
scale_color_manual(values=c("darkgrey", "#99d8c9", "#41ae76", "#005824"))+
ylim(-5, 5.2) + xlab("") + ylab("") +
ggtitle("") +
coord_flip() +
theme(legend.position="bottom",
plot.margin = unit(c(0,0.2,0,0), "cm")) #t,r,b,l
dev.off()
# store results for combined effects plot
itt_tc_all_incent <- itt_tc_all
# combined experiments effects plot -------------------------
# combine results
itt_tc_all_message$experiment <- "Video message"
itt_tc_all_incent$experiment <- "Incentivization"
exp_results_all <- bind_rows(itt_tc_all_message, itt_tc_all_incent)
# get order of variables in plot right
exp_results_all$outcome_label <- factor(
exp_results_all$outcome_label,
levels =
rev(c("Uptake (tracked)", "Uptake (hybrid)", "Uptake (reported)", "Knowledge", "Positive attitudes", "Message sharing (tracked)", "Information lookup (tracked)", "Bluetooth active (reported)", "Test/quarantine if given\nrisk warning (reported)", "Notify app if tested\npositive (reported)")
))
exp_results_all$Treatment <- factor(
exp_results_all$Treatment,
levels =
c("Pooled", "Pro-social", "Self-interest", "EUR 1", "EUR 2", "EUR 5")
)
exp_results_all$experiment <- factor(
exp_results_all$experiment,
levels =
c("Video message", "Incentivization")
)
# plot
pdf(file="../figures/experiments-effects-itt.pdf", height = 7, width = 9)
ggplot(data = exp_results_all, aes(y = estimate, x = outcome_label)) +
geom_hline(yintercept = 0, colour = "black", lty = 2) +
geom_pointrange(aes(y = estimate,
ymin = conf.low,
ymax = conf.high,
color = Treatment),
position = position_dodge(width=-.5)) +
facet_rep_wrap(~ experiment,  scales='free_x', repeat.tick.labels = "bottom", ncol = 2) +
scale_color_manual(values=c("darkgrey", "blue","red", "#99d8c9", "#41ae76", "#005824")) +
xlab("") + ylab("") +
ggtitle("") +
coord_flip() +
theme(panel.background = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 8),
axis.text = element_text(size = 12),
plot.caption = element_text(size = 7),
strip.text.y = element_text(size = 12, colour = "black"),
plot.margin=unit(c(0.1,0.1,0.1,0.1), "cm"),
panel.spacing.x = unit(-5, "cm"),
legend.position = "bottom",
#legend.title = element_blank(),
legend.key.size = unit(1, "line"),
legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill = NA)) +
guides(color = guide_legend(nrow = 1))
dev.off()
exp_results_all
# plot ger
exp_results_all$experiment_ger <- ifelse(exp_results_all$experiment == "Video message", "Informationsvideo", "Incentivierung")
exp_results_all$outcome_label
View(exp_results_all)
exp_results_all$Treatment
exp_results_all$Treatment <- c(rep("Kombiniert", 10), rep("Prosozial", 10), rep("Eigennutz", 10), rep("Kombiniert", 6), rep("EUR 1", 6), rep("EUR 2", 6), rep("EUR 5, 6"))
exp_results_all$Treatment <- c(rep("Kombiniert", 10), rep("Prosozial", 10), rep("Eigeninteresse", 10), rep("Kombiniert", 6), rep("EUR 1", 6), rep("EUR 2", 6), rep("EUR 5", 6))
c(rep("Kombiniert", 10), rep("Prosozial", 10), rep("Eigeninteresse", 10), rep("Kombiniert", 6), rep("EUR 1", 6), rep("EUR 2", 6), rep("EUR 5", 6))
View(exp_results_all)
exp_results_all$Treatment <- c(rep("Kombiniert", 10), rep("Prosozial", 10), rep("Eigeninteresse", 10), rep("Kombiniert", 6), rep("EUR 1", 6), rep("EUR 2", 5), rep("EUR 5", 6))
exp_results_all$outcome_label
exp_results_all$outcome_label_ger <- c(
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen"
)
exp_results_all$outcome_label_ger <- c(
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen"
)
pdf(file="../figures/experiments-effects-itt-ger.pdf", height = 7, width = 9)
ggplot(data = exp_results_all, aes(y = estimate, x = outcome_label_ger)) +
geom_hline(yintercept = 0, colour = "black", lty = 2) +
geom_pointrange(aes(y = estimate,
ymin = conf.low,
ymax = conf.high,
color = Treatment),
position = position_dodge(width=-.5)) +
facet_rep_wrap(~ experiment_ger,  scales='free_x', repeat.tick.labels = "bottom", ncol = 2) +
scale_color_manual(values=c("darkgrey", "blue","red", "#99d8c9", "#41ae76", "#005824")) +
xlab("") + ylab("") +
ggtitle("") +
coord_flip() +
theme(panel.background = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 8),
axis.text = element_text(size = 12),
plot.caption = element_text(size = 7),
strip.text.y = element_text(size = 12, colour = "black"),
plot.margin=unit(c(0.1,0.1,0.1,0.1), "cm"),
panel.spacing.x = unit(-5, "cm"),
legend.position = "bottom",
#legend.title = element_blank(),
legend.key.size = unit(1, "line"),
legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill = NA)) +
guides(color = guide_legend(nrow = 1))
dev.off()
levels(exp_results_all$outcome_label_ger)
levels(as.factor(exp_results_all$outcome_label_ger))
# get order of variables in plot right
exp_results_all$outcome_label_ger <- factor(
exp_results_all$outcome_label_ger,
levels =
rev(levels(as.factor(exp_results_all$outcome_label_ger))[c(7,8,6,2,1,5,4,3,9,10)]))
exp_results_all$outcome_label_ger
# plot ger
exp_results_all$experiment_ger <- ifelse(exp_results_all$experiment == "Video message", "Informationsvideo", "Incentivierung")
exp_results_all$Treatment <- c(rep("Kombiniert", 10), rep("Prosozial", 10), rep("Eigeninteresse", 10), rep("Kombiniert", 6), rep("EUR 1", 6), rep("EUR 2", 5), rep("EUR 5", 6))
exp_results_all$outcome_label_ger <- c(
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Bluetooth aktiviert (berichtet)",
"Installation (hybrid)",
"Informationssuche",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Positives Testergebnis\nin App eintragen (berichtet)",
"Nach Risikowarning\nTesten/Quarantäne (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Installation (getrackt)",
"App-Einstellungen",
"Installation (hybrid)",
"App-Wissen",
"Installation (berichtet)",
"Informationsweitergabe",
"Installation (getrackt)",
"App-Einstellungen"
)
# get order of variables in plot right
exp_results_all$outcome_label_ger_sorted <- factor(
exp_results_all$outcome_label_ger,
levels =
rev(levels(as.factor(exp_results_all$outcome_label_ger))[c(7,8,6,2,1,5,4,3,9,10)]))
exp_results_all$Treatment
exp_results_all$Treatment <- factor(
exp_results_all$Treatment,
levels =
c("Kombiniert", "Prosozial", "Eigeninteresse", "EUR 1", "EUR 2", "EUR 5")
)
exp_results_all$experiment
experiment_ger
exp_results_all$experiment_ger
exp_results_all$experiment_ger <- factor(
exp_results_all$experiment_ger,
levels =
c("Informationsvideo", "Incentivierung")
)
pdf(file="../figures/experiments-effects-itt-ger.pdf", height = 7, width = 9)
ggplot(data = exp_results_all, aes(y = estimate, x = outcome_label_ger_sorted)) +
geom_hline(yintercept = 0, colour = "black", lty = 2) +
geom_pointrange(aes(y = estimate,
ymin = conf.low,
ymax = conf.high,
color = Treatment),
position = position_dodge(width=-.5)) +
facet_rep_wrap(~ experiment_ger,  scales='free_x', repeat.tick.labels = "bottom", ncol = 2) +
scale_color_manual(values=c("darkgrey", "blue","red", "#99d8c9", "#41ae76", "#005824")) +
xlab("") + ylab("") +
ggtitle("") +
coord_flip() +
theme(panel.background = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 8),
axis.text = element_text(size = 12),
plot.caption = element_text(size = 7),
strip.text.y = element_text(size = 12, colour = "black"),
plot.margin=unit(c(0.1,0.1,0.1,0.1), "cm"),
panel.spacing.x = unit(-5, "cm"),
legend.position = "bottom",
#legend.title = element_blank(),
legend.key.size = unit(1, "line"),
legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill = NA)) +
guides(color = guide_legend(nrow = 1))
dev.off()
source("packages.R")
source("functions.R")
#options(scipen=999)
# import data ------------
# tracking data
devices_df <- read_csv("../data/20200908 all devices metadata.csv")
tracking_df <- read_csv("../data/20200923 all devices views de.rki.coronawarnapp.csv")
tracking_sociodem_df <- read_csv("../data/20200908 socio demographics.csv")
date_data <- "20200921"
load("../data/clean/ger_df_wide.RDS")
readRDS("../data/clean/ger_df_wide.RDS")
ger_df_wide <- readRDS("../data/clean/ger_df_wide.RDS")
names(ger_df_wide)
names(ger_df_wide)
ger_df_wide <-
foo <-  dplyr::select(ger_df_wide, !starts_with("cj"), !starts_with("traits"))
names(foo)
ger_df_wide <-
foo <-  dplyr::select(ger_df_wide, !starts_with("cj") & !starts_with("traits") & !starts_with("vcj") & !starts_with("vac"))
ger_df_wide <- readRDS("../data/clean/ger_df_wide.RDS")
foo <-  dplyr::select(ger_df_wide, !starts_with("cj") & !starts_with("traits") & !starts_with("vcj") & !starts_with("vac"))
foo <-  dplyr::select(ger_df_wide, !starts_with("cj") & !starts_with("traits") & !starts_with("vcj") & !starts_with("vac") & !starts_with("zipcode") & !starts_with("BL") & !starts_with("Kreis") & !starts_with("attrs"))
names(foo)
foo <-  dplyr::select(ger_df_wide, !starts_with("cj") & !starts_with("traits") & !starts_with("vcj") & !starts_with("vac") & !starts_with("zipcode") & !starts_with("BL") & !starts_with("Kreis") & !starts_with("attrs") & !starts_with("IPAddress"))
View(foo)
foo <-  dplyr::select(ger_df_wide, !starts_with("cj") & !starts_with("traits") & !starts_with("vcj") & !starts_with("vac") & !starts_with("zipcode") & !starts_with("BL") & !starts_with("Kreis") & !starts_with("attrs") & !starts_with("IPAddress") & !starts_with("Location"))
ger_df_wide <- foo
saveRDS(ger_df_wide, file = "../data/clean/ger_df_wide.RDS")
tracking_df_all <- readRDS("../data/clean/tracking_df_all_an.RDS")
View(tracking_df_all)
ger_df_wide <- readRDS("../data/clean/ger_df_wide_an.RDS")
View(ger_df_wide)
names(ger_df_wide)
names(ger_df_wide)[1000:1032]
names(ger_df_wide)[1:100]
ger_df_wide$id
